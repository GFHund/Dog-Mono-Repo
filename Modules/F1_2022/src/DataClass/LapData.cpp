/**
 * @file F1DataClassTemplate.cpp
 * @author Philipp Holzmann (Philipp1990@web.de)
 * @brief 
 * @version 1.0
 * @date 2022-05-14
 * 
 * @copyright Copyright (c) 2022
 * 
 * This file ist generated by the f1GameParserGenerator Program. Any changes will be overriden.
 * 
 */

#include <DataClass/LapData.h>

namespace DogGE{
    namespace F1_2022{
        uint32_t LapData::getLastLapTimeInMs(){return this->lastLapTimeInMs;}
uint32_t LapData::getCurrentLapTimeInMs(){return this->currentLapTimeInMs;}
uint16_t LapData::getSector1TimeInMs(){return this->sector1TimeInMs;}
uint16_t LapData::getSector2TimeInMs(){return this->sector2TimeInMs;}
float LapData::getLapDistance(){return this->lapDistance;}
float LapData::getTotalDistance(){return this->totalDistance;}
float LapData::getSafetyCarDelta(){return this->safetyCarDelta;}
uint8_t LapData::getCarPosition(){return this->carPosition;}
uint8_t LapData::getCurrentLapNum(){return this->currentLapNum;}
uint8_t LapData::getPitStatus(){return this->pitStatus;}
uint8_t LapData::getNumPitStops(){return this->numPitStops;}
uint8_t LapData::getSector(){return this->sector;}
uint8_t LapData::getCurrentLapInvalid(){return this->currentLapInvalid;}
uint8_t LapData::getPenalties(){return this->penalties;}
uint8_t LapData::getWarnings(){return this->warnings;}
uint8_t LapData::getNumUnservedDriveThroughPens(){return this->numUnservedDriveThroughPens;}
uint8_t LapData::getNumUnservedStopGoPens(){return this->numUnservedStopGoPens;}
uint8_t LapData::getGridPosition(){return this->gridPosition;}
uint8_t LapData::getDriverStatus(){return this->driverStatus;}
uint8_t LapData::getResultStatus(){return this->resultStatus;}
uint8_t LapData::getPitLaneTimerActive(){return this->pitLaneTimerActive;}
uint16_t LapData::getPitLaneTimerInLaneInMS(){return this->pitLaneTimerInLaneInMS;}
uint16_t LapData::getPitStopTimerInMS(){return this->pitStopTimerInMS;}
uint8_t LapData::getPitStopShouldServePen(){return this->pitStopShouldServePen;}

        void LapData::setLastLapTimeInMs(uint32_t lastLapTimeInMs){this->lastLapTimeInMs = lastLapTimeInMs;}
void LapData::setCurrentLapTimeInMs(uint32_t currentLapTimeInMs){this->currentLapTimeInMs = currentLapTimeInMs;}
void LapData::setSector1TimeInMs(uint16_t sector1TimeInMs){this->sector1TimeInMs = sector1TimeInMs;}
void LapData::setSector2TimeInMs(uint16_t sector2TimeInMs){this->sector2TimeInMs = sector2TimeInMs;}
void LapData::setLapDistance(float lapDistance){this->lapDistance = lapDistance;}
void LapData::setTotalDistance(float totalDistance){this->totalDistance = totalDistance;}
void LapData::setSafetyCarDelta(float safetyCarDelta){this->safetyCarDelta = safetyCarDelta;}
void LapData::setCarPosition(uint8_t carPosition){this->carPosition = carPosition;}
void LapData::setCurrentLapNum(uint8_t currentLapNum){this->currentLapNum = currentLapNum;}
void LapData::setPitStatus(uint8_t pitStatus){this->pitStatus = pitStatus;}
void LapData::setNumPitStops(uint8_t numPitStops){this->numPitStops = numPitStops;}
void LapData::setSector(uint8_t sector){this->sector = sector;}
void LapData::setCurrentLapInvalid(uint8_t currentLapInvalid){this->currentLapInvalid = currentLapInvalid;}
void LapData::setPenalties(uint8_t penalties){this->penalties = penalties;}
void LapData::setWarnings(uint8_t warnings){this->warnings = warnings;}
void LapData::setNumUnservedDriveThroughPens(uint8_t numUnservedDriveThroughPens){this->numUnservedDriveThroughPens = numUnservedDriveThroughPens;}
void LapData::setNumUnservedStopGoPens(uint8_t numUnservedStopGoPens){this->numUnservedStopGoPens = numUnservedStopGoPens;}
void LapData::setGridPosition(uint8_t gridPosition){this->gridPosition = gridPosition;}
void LapData::setDriverStatus(uint8_t driverStatus){this->driverStatus = driverStatus;}
void LapData::setResultStatus(uint8_t resultStatus){this->resultStatus = resultStatus;}
void LapData::setPitLaneTimerActive(uint8_t pitLaneTimerActive){this->pitLaneTimerActive = pitLaneTimerActive;}
void LapData::setPitLaneTimerInLaneInMS(uint16_t pitLaneTimerInLaneInMS){this->pitLaneTimerInLaneInMS = pitLaneTimerInLaneInMS;}
void LapData::setPitStopTimerInMS(uint16_t pitStopTimerInMS){this->pitStopTimerInMS = pitStopTimerInMS;}
void LapData::setPitStopShouldServePen(uint8_t pitStopShouldServePen){this->pitStopShouldServePen = pitStopShouldServePen;}

    }
}                    