/**
 * @file F1DataClassTemplate.cpp
 * @author Philipp Holzmann (Philipp1990@web.de)
 * @brief 
 * @version 1.0
 * @date 2022-05-14
 * 
 * @copyright Copyright (c) 2022
 * 
 * This file ist generated by the f1GameParserGenerator Program. Any changes will be overriden.
 * 
 */

#include <DataClass/CarStatusData.h>

namespace DogGE{
    namespace F1_2022{
        uint8_t CarStatusData::getTractionControl(){return this->tractionControl;}
uint8_t CarStatusData::getAntiLockBrakes(){return this->antiLockBrakes;}
uint8_t CarStatusData::getFuelMix(){return this->fuelMix;}
uint8_t CarStatusData::getFrontBrakeBias(){return this->frontBrakeBias;}
uint8_t CarStatusData::getPitLimiterStatus(){return this->pitLimiterStatus;}
float CarStatusData::getFuelInTank(){return this->fuelInTank;}
float CarStatusData::getFuelCapacity(){return this->fuelCapacity;}
float CarStatusData::getFuelRemainingLaps(){return this->fuelRemainingLaps;}
uint16_t CarStatusData::getMaxRPM(){return this->maxRPM;}
uint16_t CarStatusData::getIdleRPM(){return this->idleRPM;}
uint8_t CarStatusData::getMaxGears(){return this->maxGears;}
uint8_t CarStatusData::getDrsAllowed(){return this->drsAllowed;}
uint16_t CarStatusData::getDrsActivationDistance(){return this->drsActivationDistance;}
uint8_t CarStatusData::getActualTyreCompound(){return this->actualTyreCompound;}
uint8_t CarStatusData::getVisualTyreCompound(){return this->visualTyreCompound;}
uint8_t CarStatusData::getTyresAgeLaps(){return this->tyresAgeLaps;}
int8_t CarStatusData::getVehicleFiaFlags(){return this->vehicleFiaFlags;}
float CarStatusData::getErsStoreEnergy(){return this->ersStoreEnergy;}
uint8_t CarStatusData::getErsDeployMode(){return this->ersDeployMode;}
float CarStatusData::getErsHarvestedThisLapMGUK(){return this->ersHarvestedThisLapMGUK;}
float CarStatusData::getErsHarvestedThisLapMGUH(){return this->ersHarvestedThisLapMGUH;}
float CarStatusData::getErsDeployedThisLap(){return this->ersDeployedThisLap;}
uint8_t CarStatusData::getNetworkPaused(){return this->networkPaused;}

        void CarStatusData::setTractionControl(uint8_t tractionControl){this->tractionControl = tractionControl;}
void CarStatusData::setAntiLockBrakes(uint8_t antiLockBrakes){this->antiLockBrakes = antiLockBrakes;}
void CarStatusData::setFuelMix(uint8_t fuelMix){this->fuelMix = fuelMix;}
void CarStatusData::setFrontBrakeBias(uint8_t frontBrakeBias){this->frontBrakeBias = frontBrakeBias;}
void CarStatusData::setPitLimiterStatus(uint8_t pitLimiterStatus){this->pitLimiterStatus = pitLimiterStatus;}
void CarStatusData::setFuelInTank(float fuelInTank){this->fuelInTank = fuelInTank;}
void CarStatusData::setFuelCapacity(float fuelCapacity){this->fuelCapacity = fuelCapacity;}
void CarStatusData::setFuelRemainingLaps(float fuelRemainingLaps){this->fuelRemainingLaps = fuelRemainingLaps;}
void CarStatusData::setMaxRPM(uint16_t maxRPM){this->maxRPM = maxRPM;}
void CarStatusData::setIdleRPM(uint16_t idleRPM){this->idleRPM = idleRPM;}
void CarStatusData::setMaxGears(uint8_t maxGears){this->maxGears = maxGears;}
void CarStatusData::setDrsAllowed(uint8_t drsAllowed){this->drsAllowed = drsAllowed;}
void CarStatusData::setDrsActivationDistance(uint16_t drsActivationDistance){this->drsActivationDistance = drsActivationDistance;}
void CarStatusData::setActualTyreCompound(uint8_t actualTyreCompound){this->actualTyreCompound = actualTyreCompound;}
void CarStatusData::setVisualTyreCompound(uint8_t visualTyreCompound){this->visualTyreCompound = visualTyreCompound;}
void CarStatusData::setTyresAgeLaps(uint8_t tyresAgeLaps){this->tyresAgeLaps = tyresAgeLaps;}
void CarStatusData::setVehicleFiaFlags(int8_t vehicleFiaFlags){this->vehicleFiaFlags = vehicleFiaFlags;}
void CarStatusData::setErsStoreEnergy(float ersStoreEnergy){this->ersStoreEnergy = ersStoreEnergy;}
void CarStatusData::setErsDeployMode(uint8_t ersDeployMode){this->ersDeployMode = ersDeployMode;}
void CarStatusData::setErsHarvestedThisLapMGUK(float ersHarvestedThisLapMGUK){this->ersHarvestedThisLapMGUK = ersHarvestedThisLapMGUK;}
void CarStatusData::setErsHarvestedThisLapMGUH(float ersHarvestedThisLapMGUH){this->ersHarvestedThisLapMGUH = ersHarvestedThisLapMGUH;}
void CarStatusData::setErsDeployedThisLap(float ersDeployedThisLap){this->ersDeployedThisLap = ersDeployedThisLap;}
void CarStatusData::setNetworkPaused(uint8_t networkPaused){this->networkPaused = networkPaused;}

    }
}                    