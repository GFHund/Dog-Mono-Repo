/**
 * @file F1DataClassTemplate.cpp
 * @author Philipp Holzmann (Philipp1990@web.de)
 * @brief 
 * @version 1.0
 * @date 2022-05-14
 * 
 * @copyright Copyright (c) 2022
 * 
 * This file ist generated by the f1GameParserGenerator Program. Any changes will be overriden.
 * 
 */

#include <DataClass/FinalClassificationData.h>

namespace DogGE{
    namespace F1_2022{
        uint8_t FinalClassificationData::getPosition(){return this->position;}
uint8_t FinalClassificationData::getNumLaps(){return this->numLaps;}
uint8_t FinalClassificationData::getGridPosition(){return this->gridPosition;}
uint8_t FinalClassificationData::getPoints(){return this->points;}
uint8_t FinalClassificationData::getNumPitStops(){return this->numPitStops;}
uint8_t FinalClassificationData::getResultStatus(){return this->resultStatus;}
uint32_t FinalClassificationData::getBestLapTimeInMs(){return this->bestLapTimeInMs;}
double FinalClassificationData::getTotalRaceTime(){return this->totalRaceTime;}
uint8_t FinalClassificationData::getPenaltiesTime(){return this->penaltiesTime;}
uint8_t FinalClassificationData::getNumPenalties(){return this->numPenalties;}
uint8_t FinalClassificationData::getNumTyreStints(){return this->numTyreStints;}
uint8_t* FinalClassificationData::getTyreStintsActual(){return this->tyreStintsActual;}
uint8_t* FinalClassificationData::getTyreStintsVisual(){return this->tyreStintsVisual;}
uint8_t* FinalClassificationData::getTyreStintsEndLaps(){return this->tyreStintsEndLaps;}

        void FinalClassificationData::setPosition(uint8_t position){this->position = position;}
void FinalClassificationData::setNumLaps(uint8_t numLaps){this->numLaps = numLaps;}
void FinalClassificationData::setGridPosition(uint8_t gridPosition){this->gridPosition = gridPosition;}
void FinalClassificationData::setPoints(uint8_t points){this->points = points;}
void FinalClassificationData::setNumPitStops(uint8_t numPitStops){this->numPitStops = numPitStops;}
void FinalClassificationData::setResultStatus(uint8_t resultStatus){this->resultStatus = resultStatus;}
void FinalClassificationData::setBestLapTimeInMs(uint32_t bestLapTimeInMs){this->bestLapTimeInMs = bestLapTimeInMs;}
void FinalClassificationData::setTotalRaceTime(double totalRaceTime){this->totalRaceTime = totalRaceTime;}
void FinalClassificationData::setPenaltiesTime(uint8_t penaltiesTime){this->penaltiesTime = penaltiesTime;}
void FinalClassificationData::setNumPenalties(uint8_t numPenalties){this->numPenalties = numPenalties;}
void FinalClassificationData::setNumTyreStints(uint8_t numTyreStints){this->numTyreStints = numTyreStints;}
void FinalClassificationData::setTyreStintsActual(uint8_t* tyreStintsActual){for(int i=0;i<8;i++){
this->tyreStintsActual[i] = tyreStintsActual[i];
}
}
void FinalClassificationData::setTyreStintsVisual(uint8_t* tyreStintsVisual){for(int i=0;i<8;i++){
this->tyreStintsVisual[i] = tyreStintsVisual[i];
}
}
void FinalClassificationData::setTyreStintsEndLaps(uint8_t* tyreStintsEndLaps){for(int i=0;i<8;i++){
this->tyreStintsEndLaps[i] = tyreStintsEndLaps[i];
}
}

    }
}                    