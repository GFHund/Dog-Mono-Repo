
/**
 * @file F1DataClassTemplate.cpp
 * @author Philipp Holzmann (Philipp1990@web.de)
 * @brief 
 * @version 1.0
 * @date 2022-05-14
 * 
 * @copyright Copyright (c) 2022
 * 
 * This file ist generated by the f1GameParserGenerator Program. Any changes will be overriden.
 * 
 */

#include <Entity/CarStatusPackageEntity.h>

#include <Exceptions/ValidationException.h>


namespace DogGE{
    namespace F1_2022{
        CarStatusPackageEntity::CarStatusPackageEntity(){}
CarStatusPackageEntity::CarStatusPackageEntity(char* rawData,int size,int offset){
this->setHeader(HeaderEntity(rawData,size,offset+0));
for(int i=0;i<22;i++){this->setCarStatus(i,CarStatusDataEntity(rawData,size,offset+24+i*47));}
}

        HeaderEntity CarStatusPackageEntity::getHeader(){return this->header;}
CarStatusDataEntity* CarStatusPackageEntity::getCarStatus(){return this->carStatus;}

        void CarStatusPackageEntity::setHeader(HeaderEntity header){this->header = header;}
void CarStatusPackageEntity::setCarStatus(int i,CarStatusDataEntity carStatus){this->carStatus[i] = carStatus;}


        std::string CarStatusPackageEntity::getTableName(){
            return "CarStatusPackageEntity";
        }
        std::string CarStatusPackageEntity::getTableDefinition(){
            return "CREATE TABLE IF NOT EXISTS CarStatusPackageEntity("
            "`id` INTEGER PRIMARY KEY AUTOINCREMENT,`header` REAL,`carStatus` INTEGER)";
        }
        
        void CarStatusPackageEntity::matchIntData(std::string column,int data){
            DogGE::Database::AbstractEntity::matchIntData(column,data);

        }
        void CarStatusPackageEntity::matchInt64Data(std::string column,int64_t data){
            
        }
        void CarStatusPackageEntity::matchRealData(std::string column,float data){
            
        }
        void CarStatusPackageEntity::matchStringData(std::string column,std::string data){}
        void CarStatusPackageEntity::matchRawData(std::string column,char* data,int length){
            
        }

        std::map<std::string,int> CarStatusPackageEntity::getIntMap(){
            std::map<std::string,int> ret = DogGE::Database::AbstractEntity::getIntMap();
            
            return ret;
        }
        std::map<std::string,int64_t> CarStatusPackageEntity::getInt64Map(){
            std::map<std::string,int64_t> ret;
            
            return ret;
        }
        std::map<std::string,float> CarStatusPackageEntity::getRealMap(){
            std::map<std::string,float> ret;
            
            return ret;
        }
        std::map<std::string,std::string> CarStatusPackageEntity::getStringMap(){
            std::map<std::string,std::string> ret;
            return ret;
        }
        std::map<std::string,std::pair<char*,int>> CarStatusPackageEntity::getRawMap(){
            std::map<std::string,std::pair<char*,int>> ret;
            
            return ret;
        }
    }
}                                                                        