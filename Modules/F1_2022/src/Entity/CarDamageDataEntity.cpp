
/**
 * @file F1DataClassTemplate.cpp
 * @author Philipp Holzmann (Philipp1990@web.de)
 * @brief 
 * @version 1.0
 * @date 2022-05-14
 * 
 * @copyright Copyright (c) 2022
 * 
 * This file ist generated by the f1GameParserGenerator Program. Any changes will be overriden.
 * 
 */

#include <Entity/CarDamageDataEntity.h>

#include <Exceptions/ValidationException.h>


namespace DogGE{
    namespace F1_2022{
        CarDamageDataEntity::CarDamageDataEntity(){}
CarDamageDataEntity::CarDamageDataEntity(char* rawData,int size,int offset){
this->setTyresWearRL(*((float*)(rawData+0)));
this->setTyresWearRR(*((float*)(rawData+4)));
this->setTyresWearFL(*((float*)(rawData+8)));
this->setTyresWearFR(*((float*)(rawData+12)));
this->setTyresDamageRL(*((uint8_t*)(rawData+16)));
this->setTyresDamageRR(*((uint8_t*)(rawData+17)));
this->setTyresDamageFL(*((uint8_t*)(rawData+18)));
this->setTyresDamageFR(*((uint8_t*)(rawData+19)));
this->setBrakesDamageRL(*((uint8_t*)(rawData+20)));
this->setBrakesDamageRR(*((uint8_t*)(rawData+21)));
this->setBrakesDamageFL(*((uint8_t*)(rawData+22)));
this->setBrakesDamageFR(*((uint8_t*)(rawData+23)));
this->setFrontLeftWingDamage(*((uint8_t*)(rawData+24)));
this->setFrontRightWingDamage(*((uint8_t*)(rawData+25)));
this->setRearWingDamage(*((uint8_t*)(rawData+26)));
this->setFloorDamage(*((uint8_t*)(rawData+27)));
this->setDiffuserDamage(*((uint8_t*)(rawData+28)));
this->setSidepodDamage(*((uint8_t*)(rawData+29)));
this->setDrsFault(*((uint8_t*)(rawData+30)));
this->setErsFault(*((uint8_t*)(rawData+31)));
this->setGearBoxDamage(*((uint8_t*)(rawData+32)));
this->setEngineDamage(*((uint8_t*)(rawData+33)));
this->setEngineMGUHWear(*((uint8_t*)(rawData+34)));
this->setEngineESWear(*((uint8_t*)(rawData+35)));
this->setEngineCEWear(*((uint8_t*)(rawData+36)));
this->setEngineICEWear(*((uint8_t*)(rawData+37)));
this->setEngineMGUKWear(*((uint8_t*)(rawData+38)));
this->setEngineTCWear(*((uint8_t*)(rawData+39)));
this->setEngineBlown(*((uint8_t*)(rawData+40)));
this->setEngineSeized(*((uint8_t*)(rawData+41)));
}

        float CarDamageDataEntity::getTyresWearRL(){return this->tyresWearRL;}
float CarDamageDataEntity::getTyresWearRR(){return this->tyresWearRR;}
float CarDamageDataEntity::getTyresWearFL(){return this->tyresWearFL;}
float CarDamageDataEntity::getTyresWearFR(){return this->tyresWearFR;}
uint8_t CarDamageDataEntity::getTyresDamageRL(){return this->tyresDamageRL;}
uint8_t CarDamageDataEntity::getTyresDamageRR(){return this->tyresDamageRR;}
uint8_t CarDamageDataEntity::getTyresDamageFL(){return this->tyresDamageFL;}
uint8_t CarDamageDataEntity::getTyresDamageFR(){return this->tyresDamageFR;}
uint8_t CarDamageDataEntity::getBrakesDamageRL(){return this->brakesDamageRL;}
uint8_t CarDamageDataEntity::getBrakesDamageRR(){return this->brakesDamageRR;}
uint8_t CarDamageDataEntity::getBrakesDamageFL(){return this->brakesDamageFL;}
uint8_t CarDamageDataEntity::getBrakesDamageFR(){return this->brakesDamageFR;}
uint8_t CarDamageDataEntity::getFrontLeftWingDamage(){return this->frontLeftWingDamage;}
uint8_t CarDamageDataEntity::getFrontRightWingDamage(){return this->frontRightWingDamage;}
uint8_t CarDamageDataEntity::getRearWingDamage(){return this->rearWingDamage;}
uint8_t CarDamageDataEntity::getFloorDamage(){return this->floorDamage;}
uint8_t CarDamageDataEntity::getDiffuserDamage(){return this->diffuserDamage;}
uint8_t CarDamageDataEntity::getSidepodDamage(){return this->sidepodDamage;}
uint8_t CarDamageDataEntity::getDrsFault(){return this->drsFault;}
uint8_t CarDamageDataEntity::getErsFault(){return this->ersFault;}
uint8_t CarDamageDataEntity::getGearBoxDamage(){return this->gearBoxDamage;}
uint8_t CarDamageDataEntity::getEngineDamage(){return this->engineDamage;}
uint8_t CarDamageDataEntity::getEngineMGUHWear(){return this->engineMGUHWear;}
uint8_t CarDamageDataEntity::getEngineESWear(){return this->engineESWear;}
uint8_t CarDamageDataEntity::getEngineCEWear(){return this->engineCEWear;}
uint8_t CarDamageDataEntity::getEngineICEWear(){return this->engineICEWear;}
uint8_t CarDamageDataEntity::getEngineMGUKWear(){return this->engineMGUKWear;}
uint8_t CarDamageDataEntity::getEngineTCWear(){return this->engineTCWear;}
uint8_t CarDamageDataEntity::getEngineBlown(){return this->engineBlown;}
uint8_t CarDamageDataEntity::getEngineSeized(){return this->engineSeized;}

        void CarDamageDataEntity::setTyresWearRL(float tyresWearRL){this->tyresWearRL = tyresWearRL;}
void CarDamageDataEntity::setTyresWearRR(float tyresWearRR){this->tyresWearRR = tyresWearRR;}
void CarDamageDataEntity::setTyresWearFL(float tyresWearFL){this->tyresWearFL = tyresWearFL;}
void CarDamageDataEntity::setTyresWearFR(float tyresWearFR){this->tyresWearFR = tyresWearFR;}
void CarDamageDataEntity::setTyresDamageRL(uint8_t tyresDamageRL){this->tyresDamageRL = tyresDamageRL;}
void CarDamageDataEntity::setTyresDamageRR(uint8_t tyresDamageRR){this->tyresDamageRR = tyresDamageRR;}
void CarDamageDataEntity::setTyresDamageFL(uint8_t tyresDamageFL){this->tyresDamageFL = tyresDamageFL;}
void CarDamageDataEntity::setTyresDamageFR(uint8_t tyresDamageFR){this->tyresDamageFR = tyresDamageFR;}
void CarDamageDataEntity::setBrakesDamageRL(uint8_t brakesDamageRL){this->brakesDamageRL = brakesDamageRL;}
void CarDamageDataEntity::setBrakesDamageRR(uint8_t brakesDamageRR){this->brakesDamageRR = brakesDamageRR;}
void CarDamageDataEntity::setBrakesDamageFL(uint8_t brakesDamageFL){this->brakesDamageFL = brakesDamageFL;}
void CarDamageDataEntity::setBrakesDamageFR(uint8_t brakesDamageFR){this->brakesDamageFR = brakesDamageFR;}
void CarDamageDataEntity::setFrontLeftWingDamage(uint8_t frontLeftWingDamage){this->frontLeftWingDamage = frontLeftWingDamage;}
void CarDamageDataEntity::setFrontRightWingDamage(uint8_t frontRightWingDamage){this->frontRightWingDamage = frontRightWingDamage;}
void CarDamageDataEntity::setRearWingDamage(uint8_t rearWingDamage){this->rearWingDamage = rearWingDamage;}
void CarDamageDataEntity::setFloorDamage(uint8_t floorDamage){this->floorDamage = floorDamage;}
void CarDamageDataEntity::setDiffuserDamage(uint8_t diffuserDamage){this->diffuserDamage = diffuserDamage;}
void CarDamageDataEntity::setSidepodDamage(uint8_t sidepodDamage){this->sidepodDamage = sidepodDamage;}
void CarDamageDataEntity::setDrsFault(uint8_t drsFault){this->drsFault = drsFault;}
void CarDamageDataEntity::setErsFault(uint8_t ersFault){this->ersFault = ersFault;}
void CarDamageDataEntity::setGearBoxDamage(uint8_t gearBoxDamage){this->gearBoxDamage = gearBoxDamage;}
void CarDamageDataEntity::setEngineDamage(uint8_t engineDamage){this->engineDamage = engineDamage;}
void CarDamageDataEntity::setEngineMGUHWear(uint8_t engineMGUHWear){this->engineMGUHWear = engineMGUHWear;}
void CarDamageDataEntity::setEngineESWear(uint8_t engineESWear){this->engineESWear = engineESWear;}
void CarDamageDataEntity::setEngineCEWear(uint8_t engineCEWear){this->engineCEWear = engineCEWear;}
void CarDamageDataEntity::setEngineICEWear(uint8_t engineICEWear){this->engineICEWear = engineICEWear;}
void CarDamageDataEntity::setEngineMGUKWear(uint8_t engineMGUKWear){this->engineMGUKWear = engineMGUKWear;}
void CarDamageDataEntity::setEngineTCWear(uint8_t engineTCWear){this->engineTCWear = engineTCWear;}
void CarDamageDataEntity::setEngineBlown(uint8_t engineBlown){this->engineBlown = engineBlown;}
void CarDamageDataEntity::setEngineSeized(uint8_t engineSeized){this->engineSeized = engineSeized;}


        std::string CarDamageDataEntity::getTableName(){
            return "CarDamageDataEntity";
        }
        std::string CarDamageDataEntity::getTableDefinition(){
            return "CREATE TABLE IF NOT EXISTS CarDamageDataEntity("
            "`id` INTEGER PRIMARY KEY AUTOINCREMENT,`tyresWearRL` REAL,`tyresWearRR` REAL,`tyresWearFL` REAL,`tyresWearFR` REAL,`tyresDamageRL` INTEGER,`tyresDamageRR` INTEGER,`tyresDamageFL` INTEGER,`tyresDamageFR` INTEGER,`brakesDamageRL` INTEGER,`brakesDamageRR` INTEGER,`brakesDamageFL` INTEGER,`brakesDamageFR` INTEGER,`frontLeftWingDamage` INTEGER,`frontRightWingDamage` INTEGER,`rearWingDamage` INTEGER,`floorDamage` INTEGER,`diffuserDamage` INTEGER,`sidepodDamage` INTEGER,`drsFault` INTEGER,`ersFault` INTEGER,`gearBoxDamage` INTEGER,`engineDamage` INTEGER,`engineMGUHWear` INTEGER,`engineESWear` INTEGER,`engineCEWear` INTEGER,`engineICEWear` INTEGER,`engineMGUKWear` INTEGER,`engineTCWear` INTEGER,`engineBlown` INTEGER,`engineSeized` INTEGER)";
        }
        
        void CarDamageDataEntity::matchIntData(std::string column,int data){
            DogGE::Database::AbstractEntity::matchIntData(column,data);

        }
        void CarDamageDataEntity::matchInt64Data(std::string column,int64_t data){
            
        }
        void CarDamageDataEntity::matchRealData(std::string column,float data){
            if(column.compare("tyresWearRL") == 0){
this->setTyresWearRL(data);
} else if(column.compare("tyresWearRR") == 0){
this->setTyresWearRR(data);
} else if(column.compare("tyresWearFL") == 0){
this->setTyresWearFL(data);
} else if(column.compare("tyresWearFR") == 0){
this->setTyresWearFR(data);
}
        }
        void CarDamageDataEntity::matchStringData(std::string column,std::string data){}
        void CarDamageDataEntity::matchRawData(std::string column,char* data,int length){
            
        }

        std::map<std::string,int> CarDamageDataEntity::getIntMap(){
            std::map<std::string,int> ret = DogGE::Database::AbstractEntity::getIntMap();
            
            return ret;
        }
        std::map<std::string,int64_t> CarDamageDataEntity::getInt64Map(){
            std::map<std::string,int64_t> ret;
            
            return ret;
        }
        std::map<std::string,float> CarDamageDataEntity::getRealMap(){
            std::map<std::string,float> ret;
            ret.insert(std::pair<std::string,float>("tyresWearRL",this->getTyresWearRL()));ret.insert(std::pair<std::string,float>("tyresWearRR",this->getTyresWearRR()));ret.insert(std::pair<std::string,float>("tyresWearFL",this->getTyresWearFL()));ret.insert(std::pair<std::string,float>("tyresWearFR",this->getTyresWearFR()));
            return ret;
        }
        std::map<std::string,std::string> CarDamageDataEntity::getStringMap(){
            std::map<std::string,std::string> ret;
            return ret;
        }
        std::map<std::string,std::pair<char*,int>> CarDamageDataEntity::getRawMap(){
            std::map<std::string,std::pair<char*,int>> ret;
            
            return ret;
        }
    }
}                                                                        